name: Run JMeter Test

on:
  push:
    paths:
      - 'jmeter/**'
      - '.github/workflows/jmeter-test.yml'
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain (e.g., example.com)'
        required: true
        default: 'example.com'
      output_format:
        description: 'Output format (html, csv, or xml)'
        required: true
        default: 'html'

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Download and Extract Apache JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz
          tar -xzf apache-jmeter-5.5.tgz
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.5" >> $GITHUB_ENV
          echo "$(pwd)/apache-jmeter-5.5/bin" >> $GITHUB_PATH

      - name: Replace Domain in JMX File
        env:
          TARGET_DOMAIN: ${{ github.event.inputs.domain }}
        run: |
          sed "s|<stringProp name=\"HTTPSampler.domain\">.*</stringProp>|<stringProp name=\"HTTPSampler.domain\">${TARGET_DOMAIN}</stringProp>|" \
            jmeter/demo-test.jmx > jmeter/updated-test.jmx

      - name: Run JMeter and Generate Results
        run: |
          if [ "${{ github.event.inputs.output_format }}" == "html" ]; then
            jmeter -n -t jmeter/updated-test.jmx -l jmeter/results.csv
            jmeter -g jmeter/results.csv -o jmeter/html-report
          else
            jmeter -n -t jmeter/updated-test.jmx \
              -l jmeter/results.${{ github.event.inputs.output_format }} \
              -Jjmeter.save.saveservice.output_format=${{ github.event.inputs.output_format }}
          fi

      - name: Upload JMeter Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: |
            jmeter/results.csv
            jmeter/results.xml
            jmeter/html-report/

      - name: Fail if any samples failed (CSV only)
        if: ${{ github.event.inputs.output_format == 'csv' }}
        run: |
          FAILURES=$(grep ',false,' jmeter/results.csv | wc -l)
          if [ "$FAILURES" -gt 0 ]; then
            echo "❌ Found $FAILURES failed requests."
            exit 1
          else
            echo "✅ All requests succeeded."
          fi
